{"version":3,"file":"static/js/957.f7d89f5e.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/getMovies.js"],"sourcesContent":["import React from 'react';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieCard = ({ movie }) => {\n  const {\n    title,\n    name,\n    poster_path,\n    overview,\n    genres,\n    popularity,\n    // vote_average,\n  } = movie;\n  return (\n    <div className=\"MovieCard\">\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultImg\n        }\n        width={250}\n        alt=\"poster\"\n      />\n      <div>\n        <h1>{title ? title : name}</h1>\n        <p>Popularity: {popularity}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        {genres && (\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMovieById } from 'services/getMovies';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getmovie = async () => {\n      try {\n        if (!movieId) return;\n        setLoading(true);\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getmovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <NavLink className=\"backLink\" to={backLinkHref.current}>\n        Go Back\n      </NavLink>\n      {loading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n\n      <MovieCard movie={movie} />\n      <ul>\n        Additional information\n        <li>\n          <NavLink to=\"cast\">Casts</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n      <Suspense\n        fallback={\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        }\n      >\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst MY_KEY = 'baa4c44aec2e3cf8e4547ba86148755f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: MY_KEY,\n};\nexport const getAllMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/all/day`);\n  return data;\n};\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCasts = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`);\n  return data;\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`);\n  return data;\n};\nexport const getMoviesbyQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}`);\n  return data;\n};\n"],"names":["_ref","movie","title","name","poster_path","overview","genres","popularity","_jsxs","className","children","_jsx","src","concat","width","alt","map","genre","id","Cast","lazy","Reviews","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","loading","setLoading","location","useLocation","backLinkHref","useRef","state","from","useEffect","getmovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","getMovieById","sent","t0","toast","message","finish","stop","apply","arguments","_Fragment","NavLink","to","current","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","MovieCard","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Suspense","fallback","Routes","Route","path","element","BASE_URL","axios","api_key","getAllMovies","_yield$axios$get","_ref2","_callee2","_yield$axios$get2","_context2","_x","getMovieCasts","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMoviesbyQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}