{"version":3,"file":"static/js/264.e5324dff.chunk.js","mappings":"iRA4BA,EAxBiB,SAAHA,GAAkB,IAAZC,EAAID,EAAJC,KAElB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGF,GACCA,EAAKG,KAAI,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAAcC,EAASH,EAATG,UAAWC,EAAEJ,EAAFI,GAAE,OAC3CC,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACED,EAAAA,EAAAA,KAAA,OACES,IACEJ,EAAY,mCAAAK,OAC2BL,GAZrD,8EAeYM,MAAO,IACPC,IAAI,YAENZ,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,KACLI,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,cAAYK,OAXRC,EAYJ,KAIf,ECoBA,EAvCa,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BhB,EAAIkB,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAmB1B,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAA3B,GAAA4B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAERlB,EAAQ,CAADiB,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBACK,OAAjBV,GAAW,GAAMO,EAAAE,KAAA,GACEE,EAAAA,EAAAA,IAAcrB,GAAS,KAAD,EAAnCgB,EAAIC,EAAAK,KACVhB,EAAQU,GAAMC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEdO,EAAAA,GAAAA,MAAYP,EAAAM,GAAME,SAAS,QAET,OAFSR,EAAAC,KAAA,GAE3BR,GAAW,GAAOO,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,yBAErB,kBAXa,OAAA9B,EAAA2C,MAAA,KAAAC,UAAA,KAadjB,GACF,GAAG,CAACZ,KAGFL,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CACGqB,IACCtB,EAAAA,EAAAA,KAAC2C,EAAAA,GAAa,CACZC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBnC,MAAM,KACNoC,SAAS,KAGb/C,EAAAA,EAAAA,KAACgD,EAAQ,CAACjD,KAAMA,EAAKA,QACrBC,EAAAA,EAAAA,KAACiD,EAAAA,GAAc,CAACC,SAAS,gBAG/B,C","sources":["components/CastList/CastList.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import React from 'react';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst CastList = ({ cast }) => {\n  // console.log(cast);\n  return (\n    <ul>\n      {cast &&\n        cast.map(({ name, profile_path, character, id }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : defaultImg\n              }\n              width={150}\n              alt=\"poster\"\n            />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default CastList;\n","import React, { useEffect, useState } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMovieCasts } from 'services/getMovies';\nimport CastList from '../CastList/CastList';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getmovie = async () => {\n      try {\n        if (!movieId) return;\n        setLoading(true);\n        const data = await getMovieCasts(movieId);\n        setCast(data);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getmovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      <CastList cast={cast.cast} />\n      <ToastContainer position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_ref","cast","_jsx","children","map","_ref2","name","profile_path","character","id","_jsxs","src","concat","width","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","loading","setLoading","useEffect","getmovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","getMovieCasts","sent","t0","toast","message","finish","stop","apply","arguments","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","CastList","ToastContainer","position"],"sourceRoot":""}