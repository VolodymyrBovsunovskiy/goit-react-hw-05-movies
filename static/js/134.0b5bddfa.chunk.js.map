{"version":3,"file":"static/js/134.0b5bddfa.chunk.js","mappings":"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","sources":["components/HomeListItem/HomeList.jsx","pages/Movies.jsx","services/getMovies.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst HomeList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className=\"movieLinkList\">\n      {movies.map(movie => (\n        <Link\n          state={{ from: location }}\n          className=\"movieLink\"\n          key={movie.id}\n          to={`/movies/${movie.id}`}\n        >\n          <li className=\"movieItem\">\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : defaultImg\n              }\n              width={130}\n              height={180}\n              alt=\"poster\"\n            />\n            <p>{movie.title ? movie.title : movie.name}</p>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default HomeList;\n","import HomeList from 'components/HomeListItem/HomeList';\nimport { useEffect, useState } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useSearchParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMoviesbyQuery } from 'services/getMovies';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const getmovie = async () => {\n      try {\n        if (!query) return;\n        setLoading(true);\n        const data = await getMoviesbyQuery(query);\n        setMovies(data.results);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getmovie();\n  }, [query]);\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const searchQuery = e.currentTarget.elements.searchMovieByName.value;\n    setSearchParams({ query: searchQuery });\n    e.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleOnSubmit}>\n        <label>\n          <p>Search movie by name</p>\n          <input className=\"input\" type=\"text\" name=\"searchMovieByName\" />\n        </label>\n        <button className=\"btnSubmit\">Submit</button>\n      </form>\n      {loading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      {movies.length > 0 && <HomeList movies={movies} />}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst MY_KEY = 'baa4c44aec2e3cf8e4547ba86148755f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: MY_KEY,\n};\nexport const getAllMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/all/day`);\n  return data;\n};\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCasts = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`);\n  return data;\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`);\n  return data;\n};\nexport const getMoviesbyQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}`);\n  return data;\n};\n"],"names":["_ref","movies","location","useLocation","_jsx","className","children","map","movie","Link","state","from","to","concat","id","_jsxs","src","poster_path","width","height","alt","title","name","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setMovies","_useState3","_useState4","loading","setLoading","query","get","useEffect","getmovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","getMoviesbyQuery","sent","results","t0","toast","message","finish","stop","apply","arguments","_Fragment","onSubmit","e","preventDefault","searchQuery","currentTarget","elements","searchMovieByName","value","reset","type","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","length","HomeList","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","BASE_URL","axios","api_key","getAllMovies","_yield$axios$get","getMovieById","_ref2","_callee2","movieId","_yield$axios$get2","_context2","_x","getMovieCasts","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}